{"version":3,"sources":["Component/SignUp/styled.js","Component/SignUp/index.js","Component/SignIn/styled.js","Component/SignIn/index.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Header","h2","Input","input","props","emptyInput","border","CheckBox","Text","span","Button","button","Link_signUp","Footer","CheckBox_position","InputName","Ikon","img","arrUsers","SignUp","state","firstName","lastName","isFirstName","isLastName","password","isPassword","email","isEmail","checked","firstNameTrue","event","setState","target","value","length","lastNameTrue","passwordTrue","match","emailTrue","isChecked","ckecked","saveData","user","push","localStorage","setItem","console","log","src","placeholder","this","onChange","type","onClick","to","Component","Label","Txt_forgot","SignIn","alt","App","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b23a5a20.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    margin-top: 10px;\r\n    background-color: #15202B;\r\n    text-align: center;\r\n    font-family:  Roboto;\r\n    max-width: 600px;\r\n    margin: 150px auto;\r\n    border: 1px solid #0c0909;\r\n    height: 700px;\r\n`;\r\n\r\nexport const Header = styled.h2`\r\n    margin-top: -110px;\r\n    color: #fff;\r\n`;\r\nexport const Input = styled.input`\r\n    width: 300px;\r\n    height: 35px;\r\n    padding: 2px 3px 2px 7px;\r\n    margin-bottom: 15px;\r\n    border: ${ props => props.emptyInput? '2px solid rgb(85, 85, 151)' : props.border ? '2px solid green' :'2px solid red'};\r\n    color: rgb(85, 85, 151);\r\n    border-radius:3px;\r\n    background: #15202B;;\r\n    border-radius: 5px;\r\n    opacity: 0.7;\r\n\r\n`;\r\n\r\nexport const CheckBox = styled.input`\r\n    margin-right: 7px;\r\n    margin-top: 10px;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n    font-size: 13px;\r\n    color: #fff;\r\n    margin-bottom: 60px;\r\n`;\r\nexport const Button = styled.button`\r\n    margin-top: 25px;\r\n    width: 310px;\r\n    height: 35px;\r\n    border-radius: 5px;\r\n    border: 1px solid grey;\r\n    color: white;\r\n    background-color: rgb(153, 153, 245);\r\n    margin-bottom: 20px;\r\n    cursor: pointer;\r\n`;\r\n// export const Txt_forgot = styled.span`\r\n//     display: inline;\r\n//     margin-right: 5px;\r\n//     color: rgb(153, 153, 245);\r\n//     font-size: 13px;\r\n// `;\r\n\r\nexport const Link_signUp = styled.span`\r\n    margin-left: 125px;\r\n    font-size: 13px;\r\n    color: rgb(153, 153, 245);\r\n`\r\nexport const Footer = styled.div`\r\n    margin-top: 50px;\r\n    color: rgb(139, 137, 145);\r\n    font-size: 85%;\r\n`;\r\n\r\nexport const CheckBox_position = styled.div`\r\n    margin-right: 85px;\r\n`;\r\n\r\nexport const InputName = styled.input`\r\n    width: 135px;\r\n    height: 35px;\r\n    padding: 2px 3px 2px 7px;\r\n    margin-bottom: 20px;\r\n    border: ${ props => props.emptyInput? '2px solid rgb(85, 85, 151)' : props.border ? '2px solid green' :'2px solid red'};\r\n    color: rgb(85, 85, 151);\r\n    border-radius:3px;\r\n    background: #15202B;;\r\n    border-radius: 5px;\r\n    opacity: 0.7;\r\n    margin: 7px;\r\n    margin-bottom: 15px;\r\n    margin-top: -15px;\r\n`;\r\n\r\nexport const Ikon = styled.img`\r\n    width: 20px;\r\n    background-color: pink;\r\n    border-radius: 100px;\r\n    padding: 8px;\r\n    margin: 120px;\r\n`","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport { Container, Ikon, InputName, Header, Input, CheckBox_position, CheckBox, Text, Button, Link_signUp, Footer } from './styled.js';\r\n\r\nlet arrUsers = [];\r\nexport default class SignUp extends Component{\r\n    state = {\r\n        firstName: '',\r\n        lastName: '',\r\n        isFirstName: false,\r\n        isLastName: false,\r\n        password: '',\r\n        isPassword: false,\r\n        email: '',\r\n        isEmail: false,\r\n        checked: false\r\n    }\r\n    \r\n    firstNameTrue = (event) =>{\r\n        this.setState({\r\n            firstName: event.target.value\r\n        })\r\n        \r\n        if(event.target.value.length >=3){\r\n            this.setState({\r\n                isFirstName: true\r\n            }) \r\n        } else {\r\n            this.setState({\r\n                isFirstName: false\r\n            })\r\n        }\r\n    }\r\n\r\n    lastNameTrue = (event) =>{\r\n        this.setState({\r\n            lastName: event.target.value\r\n        })\r\n        \r\n        if(event.target.value.length >=3){\r\n            this.setState({\r\n                isLastName: true\r\n            }) \r\n        } else {\r\n            this.setState({\r\n                isLastName: false\r\n            })\r\n        }\r\n    }\r\n\r\n    passwordTrue = (event) =>{\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n        \r\n        if(event.target.value.length >=8 && event.target.value.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]/)!=null){\r\n            this.setState({\r\n                isPassword: true\r\n            }) \r\n        } else {\r\n            this.setState({\r\n                isPassword: false\r\n            })\r\n        }\r\n    }\r\n\r\n    emailTrue = (event) =>{\r\n        this.setState({\r\n            email: event.target.value\r\n        })\r\n        \r\n        if(event.target.value.match(/^...+@..+\\...+$/)!=null){\r\n            this.setState({\r\n                isEmail: true\r\n            }) \r\n        } else {\r\n            this.setState({\r\n                isEmail: false\r\n            })\r\n        }\r\n    }\r\n\r\n    isChecked = () =>{\r\n        this.setState({\r\n            checked: !this.state.ckecked\r\n        })\r\n    }\r\n\r\n    saveData = () =>{\r\n        if(this.state.checked){\r\n            const user = {\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                email: this.state.email,\r\n                password: this.state.password\r\n            }\r\n            arrUsers.push(user);\r\n            localStorage.setItem('data', [arrUsers]);\r\n            console.log(arrUsers);\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Ikon src=\"https://image.flaticon.com/icons/svg/565/565547.svg\"/>\r\n                <Header>SIGN UP</Header>\r\n                <br/>\r\n                <div>\r\n                    <InputName placeholder='First Name*' value={this.state.firstName} emptyInput={this.state.firstName===''} border = {this.state.isFirstName} onChange={this.firstNameTrue}/>\r\n                    <InputName placeholder='Last Name*' value={this.state.lastName} emptyInput={this.state.lastName===''} border = {this.state.isLastName} onChange={this.lastNameTrue}/>\r\n                </div>\r\n                <Input placeholder='Input email here:' value={this.state.email} emptyInput={this.state.email ===''} border = {this.state.isEmail} onChange={this.emailTrue}/>\r\n                <br/>\r\n                <Input type='password' placeholder='Input password here:' value={this.state.password} emptyInput={this.state.password ===''} border = {this.state.isPassword} onChange={this.passwordTrue}/>\r\n                <CheckBox_position>\r\n                    <CheckBox type='checkbox' onChange={this.isChecked}/>\r\n                    <Text>\r\n                        I want to receive inspiration, marketing <br/>\r\n                        promotions and updates via email.\r\n                    </Text>\r\n                </CheckBox_position>\r\n                <Button onClick={this.saveData}>SIGN UP</Button>\r\n                <div>\r\n                    <Link to='/sign-in'><Link_signUp>Already have an account? Sign in</Link_signUp></Link>\r\n                </div>\r\n                <Footer>Copyrigth &copy; Your Website 2020.</Footer>\r\n            </Container>\r\n        )\r\n    }\r\n}","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n    margin-top: 10px;\r\n    background-color: #15202B;\r\n    text-align: center;\r\n    font-family:  Roboto;\r\n    max-width: 600px;\r\n    margin: 150px auto;\r\n    border: 1px solid #0c0909;\r\n    height: 700px;\r\n`;\r\n\r\nexport const Header = styled.h2`\r\n    margin-top: -110px;\r\n    color: #fff;\r\n`;\r\nexport const Input = styled.input`\r\n    width: 300px;\r\n    height: 35px;\r\n    padding: 2px 3px 2px 7px;\r\n    margin-bottom: 20px;\r\n    border: ${ props => props.emptyInput? '2px solid rgb(85, 85, 151)' : props.border ? '2px solid green' :'2px solid red'};\r\n    color: rgb(85, 85, 151);\r\n    border-radius:3px;\r\n    background: #15202B;;\r\n    border-radius: 5px;\r\n    opacity: 0.7;\r\n\r\n`;\r\n\r\nexport const Label = styled.div`\r\n    margin-right: 215px;\r\n    color: white;\r\n`;\r\n\r\nexport const CheckBox = styled.input`\r\n    margin-right: 7px;\r\n    margin-top: -10px;\r\n`;\r\n\r\nexport const Text = styled.span`\r\n    font-size: 13px;\r\n    color: #fff;\r\n`;\r\nexport const Button = styled.button`\r\n    margin-top: 25px;\r\n    width: 310px;\r\n    height: 35px;\r\n    border-radius: 5px;\r\n    border: 1px solid grey;\r\n    color: white;\r\n    background-color: rgb(153, 153, 245);\r\n    margin-bottom: 15px;\r\n    cursor: pointer;\r\n`;\r\nexport const Txt_forgot = styled.span`\r\n    display: inline;\r\n    margin-right: 5px;\r\n    color: rgb(153, 153, 245);\r\n    font-size: 13px;\r\n`;\r\n\r\nexport const Link_signUp = styled.span`\r\n    margin-left: 37px;\r\n    font-size: 13px;\r\n    color: rgb(153, 153, 245);\r\n`\r\nexport const Footer = styled.div`\r\n    margin-top: 50px;\r\n    color: rgb(139, 137, 145);\r\n    font-size: 85%;\r\n`;\r\n\r\nexport const Ikon = styled.img`\r\n    width: 20px;\r\n    background-color: pink;\r\n    border-radius: 100px;\r\n    padding: 8px;\r\n    margin: 120px;\r\n`","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nimport { Container, Ikon, Header, Input, Label, CheckBox, Text, Button, Link_signUp, Txt_forgot, Footer } from './styled.js';\r\n\r\nexport default class SignIn extends Component{\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        isEmail: false,\r\n        isPassword: false,\r\n        checked: false\r\n    }\r\n    passwordTrue = (event) =>{\r\n        this.setState({\r\n            password: event.target.value\r\n        })\r\n        \r\n        if(event.target.value.length >=8 && event.target.value.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]/)!=null){\r\n            this.setState({\r\n                isPassword: true\r\n            }) \r\n        } else {\r\n            this.setState({\r\n                isPassword: false\r\n            })\r\n        }\r\n    }\r\n\r\n    emailTrue = (event) =>{\r\n        this.setState({\r\n            email: event.target.value\r\n        })\r\n        \r\n        if(event.target.value.match(/^...+@..+\\...+$/)!=null){\r\n            this.setState({\r\n                isEmail: true\r\n            }) \r\n        } else {\r\n            this.setState({\r\n                isEmail: false\r\n            })\r\n        }\r\n    }\r\n\r\n    isChecked = () =>{\r\n        this.setState({\r\n            checked: !this.state.ckecked\r\n        })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Ikon src=\"https://image.flaticon.com/icons/svg/565/565547.svg\" alt=\"/\"/>\r\n                <Header>SIGN IN</Header>\r\n                <br/>\r\n                <Input placeholder='Input email here:' value={this.state.email} emptyInput={this.state.email ===''} border = {this.state.isEmail} onChange={this.emailTrue}/>\r\n                <br/>\r\n                <Input type='password' placeholder='Input password here:' value={this.state.password} emptyInput={this.state.password ===''} border = {this.state.isPassword} onChange={this.passwordTrue}/>\r\n                <Label>\r\n                    <CheckBox type='checkbox' onChange={this.isChecked}/>\r\n                    <Text>Remember me</Text>\r\n                </Label>\r\n                <Button>SIGN IN</Button>\r\n                <div>\r\n                    <Txt_forgot>Forgot password ?</Txt_forgot>\r\n                    <Link to='/sign-up'><Link_signUp>Don't have an account? Sign up</Link_signUp></Link>\r\n                </div>\r\n                <Footer>Copyrigth &copy; Your Website 2020.</Footer>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\n\nimport SignUp from './Component/SignUp';\nimport SignIn from './Component/SignIn';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/sign-up\">\n          <SignUp />\n        </Route>\n        <Route path=\"/\">\n          <SignIn />\n        </Route>\n      </Switch>\n  </Router>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}